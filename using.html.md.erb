---
title: Using PCF Event Alerts
owner: PCF Event Alerts
---

This topic describes how users receive alerts.

##<a id='targets'></a> Create Targets
Targets are destinations for alerts. They are unique to each CF user and can be 
created with the `cf eva-create-target NAME TYPE VALUE` command.

To see a list of targets use the `cf eva-targets`

In addition to email, `slack` and `webhook` target types are also supported. 

### <a id='email_targets'></a> Email Targets

Create an email target with:

`cf eva-create-target my-email email johndoe@example.com`

This creates a target for the **email** address "johndoe@example.com". Email addresses that do not 
match the currently logged in CF user must be verified. A verification email containing a link will 
be sent in these cases. Verification must take place before the target will receive any alerts.

### <a id='slack_targets'></a> Slack Targets

Create a **Slack** target with:

`cf eva-create-target my-slack-channel slack https://hooks.slack.com/services/XXX/XXX/XXX`

You can find out how to setup an incoming slack webhook in the 
[slack docs](https://get.slack.help/hc/en-us/articles/115005265063-Incoming-WebHooks-for-Slack).

### <a id='webhook_targets'></a> Webhook Targets

Create a **webhook** target with:

`cf eva-create-target my-webhook webhook https://example.com/pcf-events/foundation-prod`

Event Alerts will `POST` JSON to https://example.com/pcf-events/foundation-prod 
in the following format:

```
{
  "publisher": "healthwatch",
  "topic": "system.cpu.user",
  "timestamp": "2018-03-22T10:41:31-06:00",
  "metadata": {
    "level": "CRITICAL",
    "foundation": "pcf.example.com",
    "job": "router"
  },
  "subject": "CRITICAL Threshold Event: VM Memory Used: router; pcf.example.com",
  "body": "<b>level: CRITICAL</b>"
}
```

Webhook targets open up many possibilities for utilization of alerts. For example, a simple 
webserver could forward events to Pager Duty, New Relic, Datadog, etc. Alerts could also be 
logged or stored for auditing purposes. Keep in mind that the `metadata` keys (`level`, 
`foundation`, and `job`) 
of the webhook body represent what the publisher (e.g. healthwatch) sends to Event Alerts 
and may be different for each topic (system.cpu.user).  

##<a id='subscribe_topics'></a> Subscribe to Alert Topics
In order for a target to start receiving alerts, it must subscribe to topics. Topics are the various events
for which you might want to receive alerts. 

To see a list of topics, run the <code>cf eva-topics</code> command:
<pre class="terminal">
$ cf eva-topics
Getting topics as admin...
OK
Publisher      Topic                            Description
event-alerts   smoke-test                       Smoke Test Message
event-alerts   installation.started             Installation Started
event-alerts   installation.succeeded           Installation Succeeded
event-alerts   installation.failed              Installation Failed
event-alerts   http.3xx                         Api 3xx errors
event-alerts   http.4xx                         Api 4xx errors
event-alerts   http.5xx                         Api 5xx errors
healthwatch    system.mem.percent               VM Memory Used
healthwatch    system.cpu.user                  VM CPU Utilization
healthwatch    system.disk.persistent.percent   VM Persistent Disk Used
healthwatch    system.disk.ephemeral.percent    VM Ephemeral Disk Used
healthwatch    system.disk.system.percent       VM Disk Used
healthwatch    system.healthy                   VM Health Check
</pre>

To subscribe a target to a topic, use the 
<code>cf eva-subscribe TARGET\_NAME PUBLISHER TOPIC\_NAME\_OR\_ALL</code> command.

For example, to subscribe the target `my-email` to all `healthwatch` topics:

<pre class="terminal">$ cf eva-subscribe my-email healthwatch --all</pre>

To subscribe to a smaller set of topics, specify them individually:

<pre class="terminal">$ cf eva-subscribe my-email healthwatch --topics system.mem.percent,system.cpu.user</pre>

##<a id='unsubscribe_topics'></a>Unsubscribe from Alert Topics 

To unsubscribe a target from one or more alert topics, use the 
<code>cf eva-unsubscribe TARGET\_NAME PUBLISHER --topics TOPIC\_NAME1,TOPIC\_NAME2,...</code>command.

For example, to stop receiving `system.cpu.user` alerts from Healthwatch, run:

<pre class="terminal">$ cf eva-unsubscribe my-email healthwatch --topics system.cpu.user</pre>

##<a id='example-workflow-webhook'></a> Example Workflow: Sending all Healthwatch alerts to a webhook

1. Create a webhook target named webhook-ops:

	```
	cf eva-create-target webhook-ops webhook http://example.com/healthwatch-events/foundation-prod
	```

2. Verify that the target is created correctly with `cf eva-targets`.

3. Subscribe the newly created target to all healthwatch topics:

	```
	cf eva-subscribe webhook-ops healthwatch --all
	```

4. Publish a sample message to a healthwatch topic. This requires one of "notifications.write",
 "cloud_controller.admin", or "network.admin" scopes. **Any** target subscribed to the 
 `system.healthy` topic will receive a sample alert.

	```
	cf eva-sample-publish healthwatch system.healthy
	```

5. Verify a webhook message was posted to the webhook-ops 
URL (e.g. http://example.com/healthwatch-events/foundation-prod)