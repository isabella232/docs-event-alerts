---
title: Using PCF Event Alerts
owner: PCF Event Alerts
---

This topic describes how to set up and subscribe to alerts.

##<a id='targets'></a> Create Targets for Alerts

Targets are destinations for alerts and are unique to each user.

To create an alert target, do the following:

1. Run the command:

    `cf eva-create-target NAME TARGET_TYPE VALUE`<br><br>
    Where:<br>
    * `NAME` is a unique name for this target
    * `TARGET_TYPE` is one of the following:
      * email
      * slack
      * webhook
    * `VALUE` is an appropriate value for the target type, for example, an email address

Below are examples of using this command for creating these target types.


### <a id='email_targets'></a> Create Email Targets

To create an email target, do the following:

1. Run the command `cf eva-create-target NAME email EMAIL_ADDRESS`. <br><br>
    For example, to create an email target for John Doe, run this command:

    <pre class="terminal">$ cf eva-create-target jd-email email johndoe@example.com</pre>

    This creates a target named `jd-email` for the email address `johndoe@example.com`. Email addresses that do not 
    match the currently logged in user are verified by sending an email containing a link. 
    The target receives alerts after the user verifies the email.

### <a id='slack_targets'></a> Create Slack Targets

To create a Slack target, do the following:

1. Create an incoming Slack webhook using the instructions in the 
[Slack documentation](https://get.slack.help/hc/en-us/articles/115005265063-Incoming-WebHooks-for-Slack).<br><br>
  Note the Slack webhook URL, which is used in the next step.

1. Run the command `cf eva-create-target NAME slack URL`.<br><br>
    For example:<br>
    <pre class="terminal">
    $ cf eva-create-target my-slack-channel slack https<span>:</span>//hooks.slack.com/services/T024LQKAS/B9XFKQG59/YPwmF0cEXAMPLEc7T2iEr0b
    </pre>

    This creates a target named `my-slack-channel` where alerts go to the Slack webhook URL in the command. 


### <a id='webhook_targets'></a> Create Webhook Targets

Webhook targets provide many possibilities for using event alerts. For example, a simple 
webserver could forward events to Pager Duty, New Relic, Datadog, or other products. You can also use webhook targets to 
log or store alerts for auditing purposes.

To create a webhook target, do the following:

1. Run the command `cf eva-create-target NAME webhook URL`<br><br>
  For example:
  <pre class="terminal">$ cf eva-create-target my-webhook webhook https<span>:</span>//example.com/pcf-events/foundation-prod</pre>

    This creates a target call `my-webhook`, where event alerts will `POST` JSON to `https://example.com/pcf-events/foundation-prod`
    in the following format:

    ```
    {
      "publisher": "healthwatch",
      "topic": "system.cpu.user",
      "timestamp": "2018-03-22T10:41:31-06:00",
      "metadata": {
        "level": "CRITICAL",
        "foundation": "pcf.example.com",
        "job": "router"
      },
      "subject": "CRITICAL Threshold Event: VM Memory Used: router; pcf.example.com",
      "body": "<b>level: CRITICAL</b>"
    }
    ```

    In the above example:<br>
      * `healthwatch` is the alert publisher.
      * `system.cpu.user` is the alert topic.
      * The `metadata` keys shown (`level`, `foundation`, and `job`) represent what the publisher sends to PCF Event Alerts and may be different for each alert topic.  

##<a id='subscribe_topics'></a> Subscribe to Alert Topics
In order for a target to start receiving alerts, it must subscribe to topics. Topics are the various events
for which you might want to receive alerts. 

To see a list of topics, run the <code>cf eva-topics</code> command:
<pre class="terminal">
$ cf eva-topics
Getting topics as admin...
OK
Publisher      Topic                            Description
event-alerts   smoke-test                       Smoke Test Message
event-alerts   installation.started             Installation Started
event-alerts   installation.succeeded           Installation Succeeded
event-alerts   installation.failed              Installation Failed
event-alerts   http.3xx                         Api 3xx errors
event-alerts   http.4xx                         Api 4xx errors
event-alerts   http.5xx                         Api 5xx errors
healthwatch    system.mem.percent               VM Memory Used
healthwatch    system.cpu.user                  VM CPU Utilization
healthwatch    system.disk.persistent.percent   VM Persistent Disk Used
healthwatch    system.disk.ephemeral.percent    VM Ephemeral Disk Used
healthwatch    system.disk.system.percent       VM Disk Used
healthwatch    system.healthy                   VM Health Check
</pre>

To subscribe a target to a topic, use the 
<code>cf eva-subscribe TARGET\_NAME PUBLISHER TOPIC\_NAME\_OR\_ALL</code> command.

For example, to subscribe the target `my-email` to all `healthwatch` topics:

<pre class="terminal">$ cf eva-subscribe my-email healthwatch --all</pre>

To subscribe to a smaller set of topics, specify them individually:

<pre class="terminal">$ cf eva-subscribe my-email healthwatch --topics system.mem.percent,system.cpu.user</pre>

##<a id='unsubscribe_topics'></a>Unsubscribe from Alert Topics 

To unsubscribe a target from one or more alert topics, use the 
<code>cf eva-unsubscribe TARGET\_NAME PUBLISHER --topics TOPIC\_NAME1,TOPIC\_NAME2,...</code>command.

For example, to stop receiving `system.cpu.user` alerts from Healthwatch, run:

<pre class="terminal">$ cf eva-unsubscribe my-email healthwatch --topics system.cpu.user</pre>

##<a id='example-workflow-webhook'></a> Example Workflow: Sending all Healthwatch alerts to a webhook

1. Create a webhook target named webhook-ops:

	```
	cf eva-create-target webhook-ops webhook http://example.com/healthwatch-events/foundation-prod
	```

2. Verify that the target is created correctly with `cf eva-targets`.

3. Subscribe the newly created target to all healthwatch topics:

	```
	cf eva-subscribe webhook-ops healthwatch --all
	```

4. Publish a sample message to a healthwatch topic. This requires one of "notifications.write",
 "cloud_controller.admin", or "network.admin" scopes. **Any** target subscribed to the 
 `system.healthy` topic will receive a sample alert.

	```
	cf eva-sample-publish healthwatch system.healthy
	```

5. Verify a webhook message was posted to the webhook-ops 
URL (e.g. http://example.com/healthwatch-events/foundation-prod)

## <a id="commands"></a> Event Alert Commands

To see a list of existing alert targets run the command `cf eva-targets`.
