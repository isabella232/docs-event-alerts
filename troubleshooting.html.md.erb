---
title: Monitoring and Troubleshooting Pivotal Event Alerts
owner: Event Alerts
---

<strong><%= modified_date %></strong>

This topic describes how to monitor and troubleshoot <%= vars.product_full %>.

##<a id='monitor'></a> Monitor <%= vars.product_short %>

<%= vars.product_short %> is deployed as an app in <%= vars.platform_name %>.
By default, this app is called `event-alerts` and is deployed in the `event-alerts` space within the `system` org.

To monitor the performance of <%= vars.product_short %> or to retrieve troubleshooting information:

* Use the Cloud Foundry Command Line Interface (cf CLI) to obtain logs for the `event-alerts` app.
  For more information, see [Application Logging in Cloud Foundry](https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/streaming-logs.html).
* Use the Pivotal App Metrics service.
  For more information, see [Pivotal App Metrics](https://docs.pivotal.io/app-metrics/index.html).
* Use the Pivotal Metrics Forwarder service.
  The `event-alerts` app detects if you have an available instance of Pivotal Metrics Forwarder
  and transmits custom app metrics through Loggregator to the service.
  For more information, see [Pivotal Metrics Forwarder](https://docs.pivotal.io/metrics-forwarder/).
  <p class="note"><strong>Note:</strong> When Pivotal Metrics Forwarder is not installed,
  <%= vars.product_short %> produces an error.
     This indicates that no custom metrics are being published to the Firehose.
     It does not indicate a problem with the system.</p>

##<a id="scale"></a> Scale <%= vars.product_short %>

You might need to scale <%= vars.product_short %> to improve performance.

To scale <%= vars.product_short %>:

1. Use the cf CLI to log in to your <%= vars.platform_name %> deployment as an admin. For example:
	<pre class="terminal">$ cf login
	API endpoint: http<span>s:</span>//api.sys.cf-example.com
	Email> admin
	Password>
	</pre>
1. When prompted, select the `system` org and the `event-alerts` space.
1. Scale up the number of instances of the `event-alerts` app.
   Two instances should adequately handle most alerting workloads from Pivotal Healthwatch.
   For example:
	<pre class="terminal">$ cf scale event-alerts -i 2</pre>
	If you are running very large <%= vars.platform_name %> deployments with frequent threshold events,
        you might need to increase the instance count above two.

##<a id="reduce-notifications"></a> Reduce Notifications

If <%= vars.product_short %> is receiving frequent event notifications, you can do one or both of the following:

* Unsubscribe from alerts that have minimal action.
* Increase threshold values to supply better indicators for action.

For more information about unsubscribing from alerts and increasing threshold values, see [Using <%= vars.product_short %>](using.html).

##<a id="t-shoot-errors"></a> Troubleshooting Errors

This section provides information about how to troubleshoot specific errors.

###<a id="errand"></a> Deploy <%= vars.product_short %> Errand Fails

This problem happens when you do not have `SUPER` privileges and binary logging is enabled.
If you do not resolve this issue, <%= vars.product_short %> is not deployed.

#### Symptom

When you **Apply Changes**, you see in the Pivotal Ops Manager installation pane that
the **Deploy <%= vars.product_short %>** errand fails with the following error:

<pre class="terminal">
You do not have the SUPER privilege and
binary logging is enabled (you *might* want to use the less safe
log_bin_trust_function_creators variable)
</pre>

#### Explanation

For information about the above error message,
see [Stored Program Binary Logging](https://dev.mysql.com/doc/refman/en/stored-programs-logging.html)
in the open source MySQL documentation.

#### Solution

To solve this issue:

  1. Drop the <%= vars.product_short %> database and re-create it. For information about dropping a database, see [DROP DATABASE Syntax](https://dev.mysql.com/doc/refman/en/drop-database.html) in the open source MySQL documentation.
  2. Do one of the following:
     * In the database, disable binary logging. For information about disabling binary logging, see [The Binary Log](https://dev.mysql.com/doc/refman/en/binary-log.html) in the open source MySQL documentation.
     * In the database, set `log_bin_trust_function_creators` to `1`. For information about `log_bin_trust_function_creators`, see [log\_bin\_trust\_function\_creators](https://dev.mysql.com/doc/refman/en/replication-options-binary-log.html#sysvar_log_bin_trust_function_creators) in the open source MySQL documentation.
  3. In Ops Manager, **Apply Changes** with the **Deploy <%= vars.product_short %>** errand checked.

###<a id="ip-binding"></a> <%= vars.product_short %> Fails to Release IP Address Bindings on MySQL Upgrade

#### Symptom

When upgrading from MySQL for Pivotal Platform v2.4 to v2.5, all service bindings must be changed from
IP address based bindings to hostname based bindings.
<%= vars.product_short %> sometimes fails to release IP address bindings after following the procedure in
[Deprecated Service Bindings Found (Upgrade Error)](https://docs.pivotal.io/p-mysql/2-5/troubleshoot.html#deprecated-service-bindings).

#### Explanation

The cause of this issue is unknown.

#### Solution

Re-create the service key by running:

<p class="note warning">
  <strong>Warning:</strong> You must use the username <code>migrations_user</code> in the command below.
  Without this, a random name is generated that causes <%= vars.product_short %> to fail.
</p>

```
cf create-service-key pcf-event-alerts-db migrations_service_key -c '{ "username": "migrations_user" }'
```
